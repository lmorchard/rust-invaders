# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=rust-invaders
    - PKG_CONFIG_ALLOW_CROSS=1
    - LD_RUN_PATH='$ORIGIN/lib'

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=arm-unknown-linux-gnueabi
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    #- env: TARGET=x86_64-unknown-linux-musl

    # OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Windows
    #- env: TARGET=x86_64-pc-windows-gnu

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "ZtXZnrU6yt+naatxi2y8JRmNhLl2wzzSkek1UaBtKKZzmQtboALFJNrgWR/qwuHMXlts2W4V3+SUpjL5QeRlHWCyR9OEYelR+he/AUzd3V7Gdc7Cjdgjs904IVBCeb8Qfyf8ohAaTmk/IhEPB6P8SRi1WvoXmUTMfOYpamiqGCe22vqAaiG56D/Hxtk6DQdcWfMA/RVGmjeBnZhLRAOZYR9FdYVakMaMrbfzs2jSS8TrtLxrlPaBZ0/t/HVIruYINQU2AfYK+g3+Jch81eZku6Yr0/T4ujtQG508PyD0dotpbRASj7ueGEiKwSC7eii1s0AnKsJRoOmEbjfZzjC1nqwWtW1tu5Bpz2ZHEAmyZTOQZlA9JMh2Fet26beCarwFb1SCmBXio6OpITjdyIP6KA/seS3G3fJlrDAo8GM5z3BcG642U3/ZzEDGRr30cSD835D5nIxBwwdJnym8AUOuZVWjq6wxonzNkDNCQQmtLMYouteqWRnfIS1SsQF57yEG9yjjnP9MPY1tQTGUzovzv9zPaD6Iwc6gpDtCmgv+jGmVPuyq+NaZEEGQk4lmgw9cSUrZ6o4dYTEGGfcLBVPh29miAC7k5QtZbj192p1QO/0uGkKaonD5ABNMH5WHuAAeyJZ4hqO+ItwmZQ/+msWf2AmAEFWFH8gjucLR0AV5Rf8="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - cross-build

notifications:
  email:
    on_success: never
